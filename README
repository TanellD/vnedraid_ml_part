# üëó OOTD Inference Server 

![Python](https://img.shields.io/badge/python-3.10.18-blue.svg)
![CUDA](https://img.shields.io/badge/CUDA-11.8-green.svg)
![License](https://img.shields.io/badge/license-MIT-orange.svg)

## üéØ –ü—Ä–∏–≤–µ—Ç –í–Ω–µ–¥—Ä–µ–π–¥–µ—Ä–∞–º!

–≠—Ç–æ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –¥–ª—è —Ö–∞–∫–∞—Ç–æ–Ω–∞ **"–í–Ω–µ–¥—Ä–µ–π–¥"** –æ—Ç **Orion Soft** –≤–º–µ—Å—Ç–µ —Å —Ç–∞–∫–∏–º–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏ –∫–∞–∫:
- üõçÔ∏è **LamodaTech** 
- üõí **Magnit Tech**
- üè¶ **–¢-–ë–∞–Ω–∫** 
- üì¶ **CDEK**
- üè™ **–ê–≤–∏—Ç–æ**

–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–∞–Ω–¥–∞ **Hackoholics**! üöÄ

## üé® –û –ø—Ä–æ–µ–∫—Ç–µ

–≠—Ç–æ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–¥–µ—Ä–∂–∏—Ç **MVP** –∫–æ–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–¥–µ–ª–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è —Å–æ **Stable Diffusion** –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º –¥–ª—è –∑–∞–¥–∞—á–∏ –æ—Ç **LamodaTech** - **AR-–ø—Ä–∏–º–µ—Ä–æ—á–Ω–∞—è**. –°–ø–∞—Å–∏–±–æ –∏–º –±–æ–ª—å—à–æ–µ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∑–∞–¥–∞—á—É! 

### üí° –ò—Å—Ç–æ—á–Ω–∏–∫ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è
–ë–∞–∑–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: [OOTDiffusion](https://github.com/levihsu/OOTDiffusion/tree/main)

### ‚ú® –ß—Ç–æ —Å–¥–µ–ª–∞–ª–∏ –º—ã:
- üîß –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π `requirements.txt`
- üåê REST API endpoint –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –º–æ–¥–µ–ª–∏ OOTDiffusion
- üöÄ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π inference pipeline
- ‚ö° –ë—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–ª–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞ (30 —Å–µ–∫—É–Ω–¥!)
- üîÑ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ keep-alive —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
- üìã –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞

## üñ•Ô∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

| –ö–æ–º–ø–æ–Ω–µ–Ω—Ç | –í–µ—Ä—Å–∏—è/–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ |
|-----------|----------------------|
| **Python** | 3.10.18 |
| **–û–°** | Ubuntu 24.04 LTS 64-bit |
| **GPU** | Tesla T4 16GB (–º–∏–Ω–∏–º—É–º 8GB VRAM) |
| **CUDA** | 11.8+ |
| **RAM** | 16GB+ |

## ‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å

- **–í—Ä–µ–º—è –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞:** ~30 —Å–µ–∫—É–Ω–¥
- **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:** PNG, JPG, JPEG
- **–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤—Ö–æ–¥–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:** 768x1024 (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞)
- **–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–¥–µ–∂–¥—ã:** –í–µ—Ä—Ö, –Ω–∏–∑, –ø–ª–∞—Ç—å—è

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### 1. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è

### 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
```bash
# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
python3.10 -m venv venv
source venv/bin/activate

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
pip install -r requirements.txt
```

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–µ—Å–æ–≤ –º–æ–¥–µ–ª–µ–π .py –∏–∑ –ø–∞–ø–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è

### 3. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
```bash
# –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫
cd OOTDiffusion/run
python run_ootd.py

# –ó–∞–ø—É—Å–∫ —Å –¥–æ—Å—Ç—É–ø–æ–º –∏–∑–≤–Ω–µ
python run_ootd.py --host 0.0.0.0 --port 5000
```

### 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
```bash
curl http://localhost:5000/health
```

## üì° API Endpoints

### üè• Health Check
```http
GET /health
```
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π.

### üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
```http
POST /generate
Content-Type: application/json

{
    "model_image": "base64_encoded_person_image",
    "cloth_image": "base64_encoded_cloth_image",
    "model_type": "dc",
    "category": 0,
    "scale": 2.0,
    "steps": 20,
    "seed": 42
}
```

#### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
- **model_image** (string): –§–æ—Ç–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤ base64
- **cloth_image** (string): –§–æ—Ç–æ –æ–¥–µ–∂–¥—ã –≤ base64  
- **model_type** (string): `"dc"` –∏–ª–∏ `"hd"` (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: `"dc"`)
- **category** (int): `0` - –≤–µ—Ä—Ö, `1` - –Ω–∏–∑, `2` - –ø–ª–∞—Ç—å–µ
- **scale** (float): –ú–∞—Å—à—Ç–∞–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: `2.0`)
- **steps** (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ inference (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: `20`)
- **seed** (int): Seed –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ—Å—Ç–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: `42`)

#### –û—Ç–≤–µ—Ç:
```json
{
    "success": true,
    "model_type": "dc",
    "category": "upperbody",
    "image": {
        "filename": "out_dc_0.png",
        "filepath": "./images_output/out_dc_0.png",
        "image_base64": "generated_image_in_base64"
    },
    "mask_path": "./images_output/mask_dc.jpg",
    "processing_time": "28.5s"
}
```

## üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

### –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
```bash
export CUDA_VISIBLE_DEVICES=0    # –í—ã–±–æ—Ä GPU
export FLASK_ENV=production      # –†–µ–∂–∏–º Flask
export MAX_WORKERS=4             # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ—Ä–∫–µ—Ä–æ–≤
```

## üõ†Ô∏è –ß—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å?

–ú—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–ª–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–∞:

### üéØ –ë–ª–∏–∂–∞–π—à–∏–µ –ø–ª–∞–Ω—ã:
- **–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ**: –ó–∞–¥–∞—á–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è Stable Diffusion
- **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏**: –ë–∏–∂—É—Ç–µ—Ä–∏—è, —à–ª—è–ø–∫–∏ –∏ —à–ª—è–ø—ã, –æ–±—É–≤—å
- **Batch processing**: –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
- **Caching**: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è

### üöÄ –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —Ü–µ–ª–∏:
- **Real-time inference**: WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
- **Model quantization**: –£—Å–∫–æ—Ä–µ–Ω–∏–µ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
- **Custom training**: –î–æ–æ–±—É—á–µ–Ω–∏–µ –Ω–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
- **Multi-GPU support**: –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞

## üß™ –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

### Python –∫–ª–∏–µ–Ω—Ç
```python
import requests
import base64

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
with open("person.jpg", "rb") as f:
    person_b64 = base64.b64encode(f.read()).decode()

with open("cloth.jpg", "rb") as f:
    cloth_b64 = base64.b64encode(f.read()).decode()

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
response = requests.post("http://localhost:5000/generate_sync_simple", json={
    "model_image": person_b64,
    "cloth_image": cloth_b64,
    "model_type": "dc",
    "category": 0,
    "steps": 20
})

result = response.json()
if result["success"]:
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    with open("result.png", "wb") as f:
        f.write(base64.b64decode(result["image"]["image_base64"]))
    print("‚úÖ –ì–æ—Ç–æ–≤–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ result.png")
```

### cURL –ø—Ä–∏–º–µ—Ä
```bash
curl -X POST http://localhost:5000/generate_sync_simple \
  -H "Content-Type: application/json" \
  -d '{
    "model_image": "'$(base64 -w 0 person.jpg)'",
    "cloth_image": "'$(base64 -w 0 cloth.jpg)'",
    "model_type": "dc",
    "category": 0
  }' \
  | jq -r '.image.image_base64' \
  | base64 -d > result.png
```

## üêõ –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫

### –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:

**üî¥ CUDA Out of Memory**
```bash
# –£–º–µ–Ω—å—à–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
{
    "steps": 15,     # –í–º–µ—Å—Ç–æ 20
    "scale": 1.5     # –í–º–µ—Å—Ç–æ 2.0
}
```

–ù–æ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å jpg –≤–≤–∏–¥—É –º–∞–ª–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –≤ –ø–∞–º—è—Ç–∏.

**üî¥ Timeout Error (503)**
```python
# –£–≤–µ–ª–∏—á—å—Ç–µ timeout –≤ –∫–ª–∏–µ–Ω—Ç–µ
requests.post(url, json=data, timeout=300)  # 5 –º–∏–Ω—É—Ç
```

**üî¥ Port Already in Use**
```bash
# –ù–∞–π—Ç–∏ –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å
lsof -i :5000
kill -9 <PID>
```

## üéâ –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏

–û–≥—Ä–æ–º–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ:
- **LamodaTech** –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∑–∞–¥–∞—á—É AR-–ø—Ä–∏–º–µ—Ä–æ—á–Ω–æ–π
- **Orion Soft** –∑–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é —Ö–∞–∫–∞—Ç–æ–Ω–∞ "–í–Ω–µ–¥—Ä–µ–π–¥"
- –ê–≤—Ç–æ—Ä–∞–º [OOTDiffusion](https://github.com/levihsu/OOTDiffusion) –∑–∞ –±–∞–∑–æ–≤—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é
- –í—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –∫–æ–º–∞–Ω–¥—ã **Hackoholics**

## üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è

–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ–¥ –ª–∏—Ü–µ–Ω–∑–∏–µ–π MIT. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ —Ñ–∞–π–ª–µ [LICENSE](LICENSE).

---

**–í—Å–µ–º —Ö–æ—Ä–æ—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ö–∞–∫–∞—Ç–æ–Ω–∞! üöÄ‚ú®**

*Made with ‚ù§Ô∏è by team Hackoholics for –í–Ω–µ–¥—Ä–µ–π–¥ Hackathon*
